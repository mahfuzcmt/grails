package com.webcommander.plugin.compare_product

import com.webcommander.AutoGeneratedPage
import com.webcommander.admin.ConfigService
import com.webcommander.config.SiteConfig
import com.webcommander.constants.DomainConstants
import com.webcommander.constants.NamedConstants
import com.webcommander.design.Layout
import com.webcommander.design.ProductWidgetService
import com.webcommander.design.WidgetService
import com.webcommander.plugin.compare_product.mixin_service.ProductWidgetService as CPPS
import com.webcommander.plugin.compare_product.mixin_service.WidgetService as CPWS
import com.webcommander.tenant.TenantContext
import com.webcommander.util.PluginDestroyUtil
import grails.util.Holders
import groovy.util.logging.Log

import java.util.logging.Level

@Log
class BootStrap {

    private final String COMPARE_PRODUCT = "compareProduct"

    List domain_constants = [
            [constant:"WIDGET_TYPE", key: "COMPARE_PRODUCT", value: COMPARE_PRODUCT],
            [constant:"AUTO_GENERATED_PAGES", key: "COMPARE_PRODUCT_DETAILS", value: "compare.product"],
            [constant:"ECOMMERCE_AUTO_GENERATED_PAGES_CHECKLIST", key: "compare_product", value: true],
            [constant: "ECOMMERCE_PLUGIN_CHECKLIST", key: "compare_product", value: true],
            [constant:"SITE_CONFIG_TYPES", key: "COMPARE_PRODUCT", value: "compare_product"]
    ]

    List named_constants = [
            [constant:"WIDGET_MESSAGE_KEYS", key: COMPARE_PRODUCT + ".title", value:"compare.product.widget"],
            [constant:"WIDGET_MESSAGE_KEYS", key: COMPARE_PRODUCT + ".label", value:"compare.product"],
            [constant:"WIDGET_LICENSE", key: COMPARE_PRODUCT, value:"allow_compare_product_feature"]
    ]

    def config = [
            "maximum_product"         : "3",
            "add_to_cart_active"      : "true",
            "description_active"      : "true",
            "summary_active"          : "true",
            "width_active"            : "false",
            "height_active"           : "false",
            "length_active"           : "false",
            "weight_active"           : "false",
            "model_active"            : "false",
            "price_active"            : "true",
            "image_active"            : "true",
            "name_active"             : "true",
            "sku_active"              : "sku",
            "label_for_call_for_price": "s:call.for.price"
    ]
    Map pageConfigs = [
            'product'                : ['add_to_compare': 'true'],
            'category_page'          : ['add_to_compare': 'true'],
            'search_page'            : ['add_to_compare': 'true']
    ]

    def tenantInit = { tenant ->
        DomainConstants.addConstant(domain_constants)
        NamedConstants.addConstant(named_constants)
        ConfigService.addTab(COMPARE_PRODUCT, [
                url        : "compareProductAdmin/loadConfig",
                message_key: "compare.product",
                ecommerce  : true
        ])
        Layout layout = Layout.first()
        if (!AutoGeneratedPage.findByName(DomainConstants.AUTO_GENERATED_PAGES.COMPARE_PRODUCT_DETAILS)) {
            new AutoGeneratedPage(name: DomainConstants.AUTO_GENERATED_PAGES.COMPARE_PRODUCT_DETAILS, title: "Compare Products", layout: layout, editorEnable: false).save()
        }
        if (!SiteConfig.findAllByTypeAndConfigKey(DomainConstants.SITE_CONFIG_TYPES.COMPARE_PRODUCT, "maximum_product")) {
            config.each { entry ->
                new SiteConfig(type: DomainConstants.SITE_CONFIG_TYPES.COMPARE_PRODUCT, configKey: entry.key, value: entry.value).save()
            }
        }
        pageConfigs.each { type ->
            if (!SiteConfig.findAllByTypeAndConfigKey(type.key, "add_to_compare")) {
                type.value.each { entry ->
                    new SiteConfig(type: type.key, configKey: entry.key, value: entry.value).save()
                }
            }
        }
    }

    def tenantDestroy = { tenant ->
        ConfigService.removeTab(COMPARE_PRODUCT)
        PluginDestroyUtil destroyUtil = new PluginDestroyUtil()
        try {
            destroyUtil.removeAutoPage('compare.product')
                    .removeSiteConfig('compare_product')
                    .removeSiteConfig('product', 'add_to_compare')
                    .removeSiteConfig('category_page', 'add_to_compare')
                    .removeSiteConfig('search_page', 'add_to_compare')
                    .removeSiteConfig('customer_profile_page', 'add_to_compare')
                    .removeWidget('compareProduct')
            NamedConstants.removeConstant(named_constants)
            DomainConstants.removeConstant(domain_constants)
        } catch (Exception e) {
            log.log Level.SEVERE, "Could Not Deactivate Plugin compare-product From Tenant $tenant", e
            throw e
        } finally {
            destroyUtil.closeConnection()
        }
    }

    def init = { servletContext ->
        Holders.grailsApplication.mainContext.getBean(ProductWidgetService).metaClass.mixin CPPS
        Holders.grailsApplication.mainContext.getBean(WidgetService).metaClass.mixin CPWS
        TenantContext.eachParallelWithWait(tenantInit)
    }
}
